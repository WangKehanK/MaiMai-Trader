'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _templateObject = _taggedTemplateLiteral(['\n    extend type Mutation {\n        createPost(post: PostInput!): ID\n        createPostDraft(post: PostInput!): ID\n        updatePost(post: PostInput!): ID\n        updatePostDraft(post: PostInput!): ID\n    }\n\n    extend type Query {\n        getPostById(postId: ID!): Post,\n        getPosts(limit: Int, offset: Int, filters: PostFilters): [Post]\n    }\n\n    type Post {\n        postId: ID\n        title: String\n        description: String\n        category: Category\n        condition: Condition\n        image: [String]\n        delieveryMethod: DelieveryMethod\n        price: Price\n        user: User\n        tags: [String]\n    }\n\n    type Price {\n        offerPrice: Float\n        originalPrice: Float\n    }\n\n    type DelieveryMethod {\n        deliveryType: DeliveryType!\n        address: String!\n        carrier: String\n    }\n\n    enum Condition {\n        New\n        GentlyUsed\n        Used\n        VeryUsed\n    }\n\n    enum Category {\n        Furniture\n        ElectronicDevice\n        Fashion\n        HomeAppliance\n    }\n\n    enum DeliveryType {\n        delievery,\n        pickup\n    }\n\n    enum Order {\n        priceAscending,\n        priceDescending,\n        ratingAscending,\n        ratingDescending,\n        distanceAscending,\n        distanceDescending\n    }\n\n    input PriceInput {\n        offerPrice: Float\n        originalPrice: Float\n    }\n\n    input DelieveryMethodInput {\n        deliveryType: DeliveryType\n        address: String\n        carrier: String\n    }\n\n    input PostInput {\n        postId: ID\n        title: String\n        description: String\n        category: Category\n        condition: Condition\n        image: [String]\n        delieveryMethod: DelieveryMethodInput\n        price: PriceInput\n        userId: ID\n        tags: [String]\n        orderBy: Order\n        expiryTime: Date\n        city: String\n        school: [String]\n    }\n\n    input PostFilters {\n        category: Category\n        condition: Condition\n        delieveryMethod: DelieveryMethodInput\n        price: PriceInput\n        userId: ID\n        tags: [String]\n        orderBy: Order\n        expiryTime: Date\n        text: String\n        city: String\n        school: [String]\n    }\n'], ['\n    extend type Mutation {\n        createPost(post: PostInput!): ID\n        createPostDraft(post: PostInput!): ID\n        updatePost(post: PostInput!): ID\n        updatePostDraft(post: PostInput!): ID\n    }\n\n    extend type Query {\n        getPostById(postId: ID!): Post,\n        getPosts(limit: Int, offset: Int, filters: PostFilters): [Post]\n    }\n\n    type Post {\n        postId: ID\n        title: String\n        description: String\n        category: Category\n        condition: Condition\n        image: [String]\n        delieveryMethod: DelieveryMethod\n        price: Price\n        user: User\n        tags: [String]\n    }\n\n    type Price {\n        offerPrice: Float\n        originalPrice: Float\n    }\n\n    type DelieveryMethod {\n        deliveryType: DeliveryType!\n        address: String!\n        carrier: String\n    }\n\n    enum Condition {\n        New\n        GentlyUsed\n        Used\n        VeryUsed\n    }\n\n    enum Category {\n        Furniture\n        ElectronicDevice\n        Fashion\n        HomeAppliance\n    }\n\n    enum DeliveryType {\n        delievery,\n        pickup\n    }\n\n    enum Order {\n        priceAscending,\n        priceDescending,\n        ratingAscending,\n        ratingDescending,\n        distanceAscending,\n        distanceDescending\n    }\n\n    input PriceInput {\n        offerPrice: Float\n        originalPrice: Float\n    }\n\n    input DelieveryMethodInput {\n        deliveryType: DeliveryType\n        address: String\n        carrier: String\n    }\n\n    input PostInput {\n        postId: ID\n        title: String\n        description: String\n        category: Category\n        condition: Condition\n        image: [String]\n        delieveryMethod: DelieveryMethodInput\n        price: PriceInput\n        userId: ID\n        tags: [String]\n        orderBy: Order\n        expiryTime: Date\n        city: String\n        school: [String]\n    }\n\n    input PostFilters {\n        category: Category\n        condition: Condition\n        delieveryMethod: DelieveryMethodInput\n        price: PriceInput\n        userId: ID\n        tags: [String]\n        orderBy: Order\n        expiryTime: Date\n        text: String\n        city: String\n        school: [String]\n    }\n']);

var _graphqlTag = require('graphql-tag');

var _graphqlTag2 = _interopRequireDefault(_graphqlTag);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var typeDefs = (0, _graphqlTag2.default)(_templateObject);

exports.default = typeDefs;